This file is for annotations purpose.

Example Be 1.033 MeV
Ro = 0,554 g/cm2
densidade = 1,848 g/cm3
Ro = (0,554 g/cm2) / (1,848 g/cm3) = (0,554/1,848) cm = 0,29978355 cm
deltaZ = 0,02 * 0,29978355 = 0.005995671 cm


Molybdenum density = 10.28 g/cm3 
Mo irratiated by electron 0.5 MeV, Ro = 0.281 g/cm2
Ro (cm) = Ro/density = (0.281 g/cm2) / (10.28 g/cm3) = 0.02733463 cm
deltaZ = 0.02 * 0.02733463 cm = 0.000546693 cm

Mo irratiated by electron 1.0 MeV, Ro = 0.673 g/cm2
Ro (cm) = Ro/density = (0.673 g/cm2) / (10.28 g/cm3) = 0.065467 cm
deltaZ = 0.02 * 0.065467 cm = 0.001309339 cm

This is used to try to change the geometry between runs. But I think
it hasn't worked.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	/**
	 * This tanslates the physical volume
	 */
//	detector->getCube()->SetTranslation(G4ThreeVector( 0.0*m, 0.0*m, 0.0*m));
//	runManager->GeometryHasBeenModified();
//	runManager->BeamOn(numberOfEvent);
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Used to compute simulation duration
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
time_t timeAtBegin = time(0);
time_t timeAtEnd = time(0);
//	   dt = ctime(&now);
G4cout << "Simulation started at: " << timeAtBegin << G4endl << "Simlulation ended at:: " << timeAtEnd << G4endl;
G4cout << "Time interval in minutes: " << (timeAtEnd - timeAtBegin) / 60.0 << G4endl;
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
G4int intTeste = 3;
std::ostringstream o;
o << intTeste;
str = o.str();

Ou

detector_box_name[i]  = "detector_box_"  + static_cast<std::ostringstream*>( &(std::ostringstream() << i) )->str();
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++